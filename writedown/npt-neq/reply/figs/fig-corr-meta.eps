%!PS-Adobe-2.0 EPSF-2.0
%%Title: fig-corr-meta.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Tue Mar  4 20:08:51 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 290 220
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 290 50 lineto 290 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (fig-corr-meta.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (wanghan)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Mar  4 20:08:51 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 4818.00 3400.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
770 448 M
63 0 V
3732 0 R
-63 0 V
stroke
686 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.20)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 518 M
31 0 V
3764 0 R
-31 0 V
770 587 M
31 0 V
3764 0 R
-31 0 V
770 657 M
31 0 V
3764 0 R
-31 0 V
770 726 M
31 0 V
3764 0 R
-31 0 V
770 796 M
31 0 V
3764 0 R
-31 0 V
770 796 M
63 0 V
3732 0 R
-63 0 V
stroke
686 796 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.15)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 865 M
31 0 V
3764 0 R
-31 0 V
770 935 M
31 0 V
3764 0 R
-31 0 V
770 1005 M
31 0 V
3764 0 R
-31 0 V
770 1074 M
31 0 V
3764 0 R
-31 0 V
770 1144 M
31 0 V
3764 0 R
-31 0 V
-3764 0 R
63 0 V
3732 0 R
-63 0 V
stroke
686 1144 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.10)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 1213 M
31 0 V
3764 0 R
-31 0 V
770 1283 M
31 0 V
3764 0 R
-31 0 V
770 1352 M
31 0 V
3764 0 R
-31 0 V
770 1422 M
31 0 V
3764 0 R
-31 0 V
770 1492 M
31 0 V
3764 0 R
-31 0 V
-3764 0 R
63 0 V
3732 0 R
-63 0 V
stroke
686 1492 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.05)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 1561 M
31 0 V
3764 0 R
-31 0 V
770 1631 M
31 0 V
3764 0 R
-31 0 V
770 1700 M
31 0 V
3764 0 R
-31 0 V
770 1770 M
31 0 V
3764 0 R
-31 0 V
770 1839 M
31 0 V
3764 0 R
-31 0 V
-3764 0 R
63 0 V
3732 0 R
-63 0 V
stroke
686 1839 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.00)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 1909 M
31 0 V
3764 0 R
-31 0 V
770 1979 M
31 0 V
3764 0 R
-31 0 V
770 2048 M
31 0 V
3764 0 R
-31 0 V
770 2118 M
31 0 V
3764 0 R
-31 0 V
770 2187 M
31 0 V
3764 0 R
-31 0 V
-3764 0 R
63 0 V
3732 0 R
-63 0 V
stroke
686 2187 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.05)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 2257 M
31 0 V
3764 0 R
-31 0 V
770 2327 M
31 0 V
3764 0 R
-31 0 V
770 2396 M
31 0 V
3764 0 R
-31 0 V
770 2466 M
31 0 V
3764 0 R
-31 0 V
770 2535 M
31 0 V
3764 0 R
-31 0 V
-3764 0 R
63 0 V
3732 0 R
-63 0 V
stroke
686 2535 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.10)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 2605 M
31 0 V
3764 0 R
-31 0 V
770 2674 M
31 0 V
3764 0 R
-31 0 V
770 2744 M
31 0 V
3764 0 R
-31 0 V
770 2814 M
31 0 V
3764 0 R
-31 0 V
770 2883 M
31 0 V
3764 0 R
-31 0 V
-3764 0 R
63 0 V
3732 0 R
-63 0 V
stroke
686 2883 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.15)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 2953 M
31 0 V
3764 0 R
-31 0 V
770 3022 M
31 0 V
3764 0 R
-31 0 V
770 3092 M
31 0 V
3764 0 R
-31 0 V
770 3161 M
31 0 V
3764 0 R
-31 0 V
770 3231 M
31 0 V
3764 0 R
-31 0 V
-3764 0 R
63 0 V
3732 0 R
-63 0 V
stroke
686 3231 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.20)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
770 448 M
0 63 V
0 2720 R
0 -63 V
stroke
770 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1149 448 M
0 31 V
0 2752 R
0 -31 V
1529 448 M
0 63 V
0 2720 R
0 -63 V
stroke
1529 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1908 448 M
0 31 V
0 2752 R
0 -31 V
2288 448 M
0 63 V
0 2720 R
0 -63 V
stroke
2288 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2667 448 M
0 31 V
0 2752 R
0 -31 V
3047 448 M
0 63 V
0 2720 R
0 -63 V
stroke
3047 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 600)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3426 448 M
0 31 V
0 2752 R
0 -31 V
3806 448 M
0 63 V
0 2720 R
0 -63 V
stroke
3806 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 800)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4185 448 M
0 31 V
0 2752 R
0 -31 V
4565 448 M
0 63 V
0 2720 R
0 -63 V
stroke
4565 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
770 1840 M
3795 0 V
stroke
LTb
LCb setrgbcolor
770 3231 N
770 448 L
3795 0 V
0 2783 V
-3795 0 V
Z stroke
LCb setrgbcolor
112 1839 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (< j\(0\) )]
[(Symbol) 140.0 0.0 true true 0 (c)]
[(Helvetica) 112.0 -42.0 true true 0 (C)]
[(Helvetica) 140.0 0.0 true true 0 (\(t\) >   [ )]
[(Symbol) 140.0 0.0 true true 0 (b)]
[(Helvetica) 112.0 70.0 true true 0 (-1)]
[(Helvetica) 140.0 0.0 true true 0 (ps)]
[(Helvetica) 112.0 70.0 true true 0 (-1)]
[(Helvetica) 140.0 0.0 true true 0 ( ])]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
2667 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (t [ps])]
] -46.7 MCshow
LTb
1.000 UP
846 2953 M
[ [(Helvetica) 250.0 0.0 true true 0 (\(a\))]
] -83.3 MLshow
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UP
3.000 UL
LT0
LC0 setrgbcolor
770 1038 M
0 1408 V
0 -1408 R
31 0 V
770 2446 M
31 0 V
922 982 M
0 1393 V
891 982 M
62 0 V
891 2375 M
62 0 V
1074 897 M
0 1396 V
1043 897 M
62 0 V
-62 1396 R
62 0 V
1225 917 M
0 1402 V
1194 917 M
62 0 V
-62 1402 R
62 0 V
1377 901 M
0 1392 V
1346 901 M
62 0 V
-62 1392 R
62 0 V
1529 1003 M
0 1405 V
1498 1003 M
62 0 V
-62 1405 R
62 0 V
1681 999 M
0 1406 V
1650 999 M
62 0 V
-62 1406 R
62 0 V
1833 955 M
0 1393 V
1802 955 M
62 0 V
-62 1393 R
62 0 V
1984 955 M
0 1408 V
1953 955 M
62 0 V
-62 1408 R
62 0 V
2136 923 M
0 1414 V
2105 923 M
62 0 V
-62 1414 R
62 0 V
2288 898 M
0 1395 V
2257 898 M
62 0 V
-62 1395 R
62 0 V
2440 817 M
0 1398 V
2409 817 M
62 0 V
-62 1398 R
62 0 V
2592 799 M
0 1413 V
2561 799 M
62 0 V
-62 1413 R
62 0 V
2743 830 M
0 1394 V
2712 830 M
62 0 V
-62 1394 R
62 0 V
2895 870 M
0 1394 V
2864 870 M
62 0 V
-62 1394 R
62 0 V
3047 842 M
0 1411 V
3016 842 M
62 0 V
-62 1411 R
62 0 V
3199 956 M
0 1400 V
3168 956 M
62 0 V
-62 1400 R
62 0 V
3351 896 M
0 1406 V
3320 896 M
62 0 V
stroke 3382 896 M
-62 1406 R
62 0 V
3502 785 M
0 1401 V
3471 785 M
62 0 V
-62 1401 R
62 0 V
3654 790 M
0 1398 V
3623 790 M
62 0 V
-62 1398 R
62 0 V
3806 811 M
0 1403 V
3775 811 M
62 0 V
-62 1403 R
62 0 V
3958 829 M
0 1399 V
3927 829 M
62 0 V
-62 1399 R
62 0 V
4110 869 M
0 1403 V
4079 869 M
62 0 V
-62 1403 R
62 0 V
4261 931 M
0 1406 V
4230 931 M
62 0 V
-62 1406 R
62 0 V
4413 955 M
0 1403 V
4382 955 M
62 0 V
-62 1403 R
62 0 V
4565 1073 M
0 1400 V
4534 1073 M
31 0 V
-31 1400 R
31 0 V
770 1742 BoxF
922 1679 BoxF
1074 1595 BoxF
1225 1618 BoxF
1377 1597 BoxF
1529 1706 BoxF
1681 1702 BoxF
1833 1651 BoxF
1984 1659 BoxF
2136 1630 BoxF
2288 1595 BoxF
2440 1516 BoxF
2592 1506 BoxF
2743 1527 BoxF
2895 1567 BoxF
3047 1547 BoxF
3199 1656 BoxF
3351 1599 BoxF
3502 1486 BoxF
3654 1489 BoxF
3806 1513 BoxF
3958 1529 BoxF
4110 1571 BoxF
4261 1634 BoxF
4413 1656 BoxF
4565 1773 BoxF
% End plot #1
% Begin plot #2
3.000 UL
LT0
LC0 setrgbcolor
770 1742 M
152 -63 V
152 -84 V
151 23 V
152 -21 V
152 109 V
152 -4 V
152 -51 V
151 8 V
152 -29 V
152 -35 V
152 -79 V
152 -10 V
151 21 V
152 40 V
152 -20 V
152 109 V
152 -57 V
151 -113 V
152 3 V
152 24 V
152 16 V
152 42 V
151 63 V
152 22 V
152 117 V
% End plot #2
stroke
1.000 UL
LTb
LCb setrgbcolor
770 3231 N
770 448 L
3795 0 V
0 2783 V
-3795 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
